version: '3.8'

volumes:
  staging_postgres_data: {}
  staging_postgres_data_backups: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: {{ cookiecutter.project_slug }}_production_django
    container_name: django
    depends_on:
      - postgres
      - mailhog
    volumes:
      - .:/app:z
    env_file:
      - ./.envs/.staging/.django
      - ./.envs/.staging/.postgres
    ports:
      - '5000:5000'
    environment:
      - VIRTUAL_HOST={{cookiecutter.local_https_domain_name}}
      - VIRTUAL_PORT=5000
    command: /bin/sh -c "python /app/manage.py migrate && /start"

  nginx-proxy:
    build:
      context: .
      dockerfile: ./compose/staging/nginx/Dockerfile
    image: nginx_proxy_staging
    container_name: {{cookiecutter.local_https_domain_name}}
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./staticfiles:/www/data
    restart: always
    depends_on:
      - django

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: {{ cookiecutter.project_slug }}_production_postgres
    container_name: postgres_staging
    volumes:
      - staging_postgres_data:/var/lib/postgresql/data:Z
      - staging_postgres_data_backups:/backups:z
    env_file:
      - ./.envs/.staging/.postgres

  mailhog:
    image: mailhog/mailhog:v1.0.0
    container_name: mailhog
    ports:
      - '8025:8025'

  redis:
    image: redis:5.0
    container_name: redis

  celeryworker:
    <<: *django
    image: {{ cookiecutter.project_slug }}_staging_celeryworker
    container_name: celeryworker_staging
    depends_on:
      - redis
      - postgres
      - mailhog
    ports: []
    environment:
      - NETWORK_ACCESS=internal
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: {{ cookiecutter.project_slug }}_staging_celerybeat
    container_name: celerybeat_staging
    depends_on:
      - redis
      - postgres
      - mailhog
    ports: []
    environment:
      - NETWORK_ACCESS=internal
    command: /start-celerybeat

  flower:
    <<: *django
    image: {{ cookiecutter.project_slug }}_staging_flower
    container_name: flower_staging
    ports:
      - '5555:5555'
    environment:
      - NETWORK_ACCESS=internal
    command: /start-flower

networks:
  default:
    name: {{ cookiecutter.project_slug }}_staging
